{"version":3,"sources":["serviceWorker.js","component/DetailPortfolio.js","component/Home.js","component/Contact.js","component/Footer.js","component/About.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DetailPortfolio","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","params","sajak","_this2","getRouterName","firebase","ref","once","snapshot","val","setState","react_default","a","createElement","className","alt","src","image","style","marginTop","fontSize","title","description","Component","Home","sajakList","getListSajak","child","on","data","Meta","Card","Contact","nama","returnArr","forEach","childSnapshot","push","lib","map","index","xs","sm","md","lg","key","react_router_dom","to","concat","marginBottom","card","hoverable","cover","textAlign","Links","href","target","io","About","Footer","Header","Layout","Content","App","handleClick","e","current","name","react_router","layout","menu","onClick","selectedKeys","mode","Item","path","render","component_Contact","assign","component_DetailPortfolio","component_About","exact","component_Home","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.07205afa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport './index.css'\n\n\nclass DetailPortfolio extends Component { \n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: props.match.params.id,\n            sajak: {}\n        }\n        console.log(this.props)\n    }\n\n    componentDidMount() {\n        this.props.getRouterName('portfolio')\n        firebase.database().ref('/portfolio/' + this.state.id).once('value').then((snapshot) => {\n            console.log(this.state.id)\n            console.log(snapshot.val())\n            this.setState({\n                sajak: snapshot.val()\n            })\n        });\n    }\n\n    render() {\n        return  (<div className='content-detail-portfolio'>\n                    <img className='image-large' alt=\"portfolio\" src={this.state.sajak.image} />\n                    <h1 style={{marginTop:36, fontSize:36}}><b>{this.state.sajak.title}</b></h1>\n                    <p className='content-detail'>\"{this.state.sajak.description}\"</p>\n                </div>)\n    }\n}\n\nexport default DetailPortfolio","import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport './index.css'\n\nclass Home extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          sajakList : []\n        }\n    }\n\n    componentDidMount(){\n        this.props.getRouterName('home');\n        this.getListSajak();\n    }\n\n    getListSajak() {\n        const mDatabase = firebase.database().ref().child('portfolio')\n        mDatabase.on('child_changed', function(data) {\n            console.log(data)\n        })\n    }\n\n    render (){\n        return  <div className='content'>\n                    <h1 className=\"title\">Fajri Rahmadi</h1>\n                    <h3 className=\"description\">Native Android Developer</h3>\n                </div>\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport { Card} from 'antd';\nimport { Row, Col } from 'react-flexbox-grid';\nimport './index.css'\nimport {Link} from 'react-router-dom'\n\nconst { Meta } = Card;\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          sajakList : [],\n          nama:'My Portfolio',\n          title: '',\n          description: '',\n          image: ''\n        }\n    }\n\n    componentDidMount() {\n        this.props.getRouterName('portfolio')\n        const mDatabase = firebase.database().ref('/portfolio')\n        mDatabase.once('value').then((snapshot) => {\n            var returnArr = [];\n            snapshot.forEach(function(childSnapshot) {\n                returnArr.push(childSnapshot.val())\n            });\n            this.setState({\n                sajakList:returnArr,\n                title: returnArr[0].title,\n                description: returnArr[0].description,\n                image: returnArr[0].image\n            })\n        });\n    }\n\n    render (){\n        return  (<div className='content-portfolio'>\n                    <h1 className='title'>{this.state.nama}</h1>\n                    <div>\n                        <Row>\n                            {this.state.sajakList.map((sajak, index) => \n                                <Col xs={12} sm={12} md={4} lg={3} key={index}>\n                                    <Link to={`/detail-portfolio/${sajak.key}`}>\n                                        <div style={{marginBottom:20}}>\n                                                <Card \n                                                    hoverable\n                                                    cover={<img alt=\"portfolio\" src={sajak.image} />}>\n                                                    <Meta style={{textAlign:\"justify\"}}\n                                                        title={sajak.title}\n                                                        description={sajak.description}\n                                                    />\n                                                </Card>\n                                            </div>\n                                    </Link>\n                                    \n                                </Col>\n                            )}\n                        </Row>\n                    </div>\n                </div>)\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport '../index';\nimport { IoLogoFacebook, IoLogoInstagram, IoMdMail, IoLogoLinkedin, IoLogoYoutube, IoMdJournal } from \"react-icons/io\";\n\nconst Links = () => (\n  <div className=\"bottom-layout\">\n    <a href=\"https://www.facebook.com/thegeanfu\" target=\"blank\"><IoLogoFacebook/></a>\n    <a href=\"https://www.instagram.com/fajri_rahmadi\" target=\"blank\"><IoLogoInstagram/></a>\n    <a href=\"https://www.youtube.com/channel/UCOVLR2Qp13FI_W6_C9Yjaxg\" target=\"blank\" className=\"medium-icon\"><IoLogoYoutube/></a>\n    <a href=\"https://www.linkedin.com/in/fajri-rahmadi-a06692148/\" target=\"blank\"><IoLogoLinkedin/></a>\n    <a href=\"mailto:fajrirahmadi@gmail.com\"><IoMdMail/></a>\n    <a href=\"https://fajrirahmadi.wordpress.com\" target=\"blank\" className=\"medium-icon\"><IoMdJournal/></a>\n  </div>\n);\n\nexport default Links;\n","import React, {Component} from 'react';\nimport * as firebase from 'firebase';\nimport './index.css';\nimport Links from './Footer';\n\nclass About extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n          sajakList : []\n        }\n    }\n\n    componentDidMount(){\n        this.getListSajak();\n        this.props.getRouterName('about');\n    }\n\n    getListSajak() {\n        const mDatabase = firebase.database().ref().child('portfolio')\n        mDatabase.on('child_changed', function(data) {\n            console.log(data)\n        })\n    }\n\n    render (){\n        return  <div className='content-about'>\n                    <h1 className='title'>It's About Me</h1>\n                    <p className='p'>I am Fajri Rahmadi and just call me Fajri. I am 22 years old and I graduate from University of Indonesia at 2018. I interested on creating Android application. I started learn programming since I was at college. I learn C, python, Assembly, HTML, CSS, and Java. From college, I get basic programming like algorithm, data structure, modularization, and others.</p>\n                    <p className='p'>I interested on android application and I learn how to create it individually. I remember that my first project is Restaurant Menu's and I install it in my phone, I was really excited at that moment. Then, I continue to explore about developing android application from component, integration, service API, and others.</p>\n                    <p className='p'>I get my professional project at my third years as student of university. I learn new technology that help me until today, it was Firebase as a service. This technology was help me to fast development without think about service, because he provided it. Since this project, I always use my fast development apps using firebase. You can see my application using firebase in my portfolio page, I show there.</p>\n                    <p className='p'>I work on company before my graduate day, PT Nostra Solusi Teknologi is my first company. I join as Android Developer and follow my top lead Mr. Sony Indrajid. He teach me how to make code readable, reusable, maintainable, and he show me many technology, I really proud of him. 8 month later, I quit my company and follow my way as Android Developer on Boost Indonesia. In this company, I learn about product, start from business requirement, journey, design, development, testing, and release a feature. It was my first time to work on my own product. And I am an Android Developer here until today.</p>\n                    <p className='p'>I loved to discuss with you, you can contact me below</p>\n                    <Links />\n                </div>\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport DetailPortfolio from './component/DetailPortfolio'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport './index.css';\nimport Home from './component/Home';\nimport Contact from \"./component/Contact\";\nimport About from \"./component/About\";\nimport {Link} from 'react-router-dom'\n\nconst { Header, Content} = Layout;\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state =  {\n            current: 'home'\n        };\n    }\n\n    handleClick = (e) => {\n        this.setState({\n            current:e.key\n        })\n    }\n    \n    getRouterName = (name) => {\n        this.setState({\n            current: name\n        });\n    }\n\n  render() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Layout className=\"body\">\n                    <Header className=\"header\">\n                        <Menu\n                        className=\"menu\"\n                        onClick={this.handleClick}\n                        selectedKeys={[this.state.current]}\n                        mode=\"horizontal\">\n                            <Menu.Item className=\"nav\" key=\"home\"><Link to={'/'}>Home</Link></Menu.Item>\n                            <Menu.Item className=\"nav\" key=\"portfolio\"><Link to={'/portfolio'}>Portfolio</Link></Menu.Item>\n                            <Menu.Item className=\"nav\" key=\"about\"><Link to={'/about'}>About</Link></Menu.Item>\n                        </Menu>\n                    </Header>\n                    <Content>\n                        <Route path=\"/portfolio\" render={(props) => <Contact getRouterName={this.getRouterName} {...props} /> } />\n                        <Route path=\"/detail-portfolio/:id\" render={(props) => <DetailPortfolio getRouterName={this.getRouterName} {...props}  />} />\n                        <Route path=\"/about\" render={(props) => <About getRouterName={this.getRouterName} {...props} /> } />\n                        <Route exact path=\"/\" render={(props) => <Home getRouterName={this.getRouterName} {...props} /> } />\n                    </Content>\n                </Layout>\n            </Switch>\n        </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase'\nimport 'antd/dist/antd.min.css';\nimport App from './App';\n\nvar config = {\n  apiKey: \"AIzaSyANyS7cLKqNmARrV1RmeI9zZUnfyApLh-A\",\n  authDomain: \"fajri-portfolio.firebaseapp.com\",\n  databaseURL: \"https://fajri-portfolio.firebaseio.com\",\n  projectId: \"fajri-portfolio\",\n  storageBucket: \"fajri-portfolio.appspot.com\",\n  messagingSenderId: \"718080219766\"\n};\n\nfirebase.initializeApp(config)\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}